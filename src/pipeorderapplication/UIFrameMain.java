/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pipeorderapplication;

import java.io.File;
import java.io.IOException;
import java.text.*;
import javax.imageio.ImageIO;
import javax.swing.*;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.event.*;

/**
 * UIFrameMain.java
 * Purpose: Displays GUI for application.
 * 
 * @author up789464
 * @version 1.0 04/12/17
 */
public class UIFrameMain extends javax.swing.JFrame {
    
    private PipeOrderManager pipeOrderManager = new PipeOrderManager();
    private final Class[] pipeClasses = {PipeType1.class, PipeType2.class, PipeType3.class, PipeType4.class, PipeType5.class};
    
    /**
     * Creates new form UIFrameMain
     */
    public UIFrameMain() {
        initComponents();
        this.setLocationRelativeTo(null);
        try {
            this.setIconImage(ImageIO.read(new File("src/resources/icon.png")));
        }
        catch(IOException e) {
            System.err.println("Error setting application icon");
        }
        
        // setup table event handlers
        tblOrderList.getModel().addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                NumberFormat formatter = NumberFormat.getCurrencyInstance();
                
                lblTotalCost.setText(formatter.format(getSumOfCosts()));
                btnSubmitOrders.setEnabled(pipeOrderManager.getOrders().size() > 0);
                btnClearOrder.setEnabled(pipeOrderManager.getOrders().size() > 0);
            }
        });
        tblOrderList.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                btnRemoveFromOrder.setEnabled(tblOrderList.getSelectedRow() != -1);
            }
        });
        
        // setup input verifiers for text inputs
        InputVerifier positiveDoubleVerifier = new InputVerifierPositiveDouble(btnAddToOrder);
        txtLength.setInputVerifier(positiveDoubleVerifier);
        txtDiameter.setInputVerifier(positiveDoubleVerifier);
        txtQuantity.setInputVerifier(new InputVerifierPositiveInt(btnAddToOrder));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtLength = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDiameter = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbPlasticGrade = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cmbColor = new javax.swing.JComboBox<>();
        rdbInnerInsulation = new javax.swing.JRadioButton();
        rdbOuterReinforcement = new javax.swing.JRadioButton();
        rdbChemicalResistance = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnAddToOrder = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrderList = new javax.swing.JTable();
        btnSubmitOrders = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnClearOrder = new javax.swing.JButton();
        lblTotalCost = new javax.swing.JLabel();
        btnRemoveFromOrder = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LongPipes Ordering System");
        setMaximumSize(new java.awt.Dimension(1020, 620));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(250, 250, 250));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/logo.png"))); // NOI18N
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setFocusable(false);
        jLabel1.setRequestFocusEnabled(false);
        jLabel1.setVerifyInputWhenFocusTarget(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setText("Pipe Ordering Application");

        jLabel3.setLabelFor(txtLength);
        jLabel3.setText("Length (meters)");

        jLabel4.setLabelFor(txtDiameter);
        jLabel4.setText("Diameter (inches)");

        jLabel5.setLabelFor(cmbPlasticGrade);
        jLabel5.setText("Plastic Grade");

        cmbPlasticGrade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        cmbPlasticGrade.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel6.setLabelFor(cmbColor);
        jLabel6.setText("Colour");

        cmbColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2" }));
        cmbColor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        rdbInnerInsulation.setText("Inner Insulation");
        rdbInnerInsulation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        rdbOuterReinforcement.setText("Outer Reinforcement");
        rdbOuterReinforcement.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        rdbChemicalResistance.setText("Chemical Resistance");
        rdbChemicalResistance.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel7.setLabelFor(txtQuantity);
        jLabel7.setText("Quantity");

        txtQuantity.setText("1");

        btnAddToOrder.setText("Add Pipe(s) to Orders");
        btnAddToOrder.setEnabled(false);
        btnAddToOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToOrderActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("New Pipe Details");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAddToOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbColor, 0, 106, Short.MAX_VALUE)
                    .addComponent(cmbPlasticGrade, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtQuantity)
                    .addComponent(txtLength)
                    .addComponent(txtDiameter)))
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdbInnerInsulation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rdbOuterReinforcement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rdbChemicalResistance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtDiameter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbPlasticGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(cmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(30, 30, 30)
                .addComponent(rdbInnerInsulation)
                .addGap(30, 30, 30)
                .addComponent(rdbOuterReinforcement)
                .addGap(30, 30, 30)
                .addComponent(rdbChemicalResistance)
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(btnAddToOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnAddToOrder.getAccessibleContext().setAccessibleName("Add Pipe(s) to Order");

        tblOrderList.setModel(new TableModelOrders(pipeOrderManager));
        tblOrderList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblOrderList.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblOrderList);
        if (tblOrderList.getColumnModel().getColumnCount() > 0) {
            tblOrderList.getColumnModel().getColumn(0).setResizable(false);
            tblOrderList.getColumnModel().getColumn(1).setResizable(false);
            tblOrderList.getColumnModel().getColumn(2).setResizable(false);
            tblOrderList.getColumnModel().getColumn(3).setResizable(false);
            tblOrderList.getColumnModel().getColumn(4).setResizable(false);
            tblOrderList.getColumnModel().getColumn(5).setResizable(false);
            tblOrderList.getColumnModel().getColumn(6).setResizable(false);
            tblOrderList.getColumnModel().getColumn(7).setResizable(false);
            tblOrderList.getColumnModel().getColumn(8).setResizable(false);
        }

        btnSubmitOrders.setText("Submit Orders");
        btnSubmitOrders.setEnabled(false);
        btnSubmitOrders.setMaximumSize(new java.awt.Dimension(115, 23));
        btnSubmitOrders.setMinimumSize(new java.awt.Dimension(115, 23));
        btnSubmitOrders.setPreferredSize(new java.awt.Dimension(115, 23));
        btnSubmitOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitOrdersActionPerformed(evt);
            }
        });

        jLabel8.setText("Total Order Price:");

        btnClearOrder.setText("Remove All Orders");
        btnClearOrder.setEnabled(false);
        btnClearOrder.setMaximumSize(new java.awt.Dimension(115, 23));
        btnClearOrder.setMinimumSize(new java.awt.Dimension(115, 23));
        btnClearOrder.setPreferredSize(new java.awt.Dimension(115, 23));
        btnClearOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearOrderActionPerformed(evt);
            }
        });

        lblTotalCost.setText("£0.00");
        lblTotalCost.setToolTipText("");

        btnRemoveFromOrder.setText("Remove Row from Orders");
        btnRemoveFromOrder.setEnabled(false);
        btnRemoveFromOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFromOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRemoveFromOrder)
                .addGap(18, 18, 18)
                .addComponent(btnClearOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSubmitOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 919, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSubmitOrders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClearOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnRemoveFromOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTotalCost, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Gets the sum of all PipeOrders.
     * 
     * @return      The sum of all PipeOrders as a double
     */
    private double getSumOfCosts() {
        double sumCost = 0;
        for (PipeOrder order : pipeOrderManager.getOrders()) {
            sumCost += (order.getQuantity() * order.getPipe().calculatePrice());
        }
        return sumCost;
    }
    
    /**
     * Creates a PipeOrder and places it into the PipeOrderManager if the pipe can be created. If not then display an error dialog.
     * 
     * @param evt       The event to evaluate
     */
    private void btnAddToOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToOrderActionPerformed
        try {
            double length = Double.parseDouble(txtLength.getText());
            double radius = Double.parseDouble(txtDiameter.getText()) / 2;
            int plasticGrade = Integer.parseInt((String) cmbPlasticGrade.getSelectedItem());
            int colorPrint = Integer.parseInt((String) cmbColor.getSelectedItem());
            boolean innerInsulation = rdbInnerInsulation.isSelected();
            boolean outerReinforcement = rdbOuterReinforcement.isSelected();
            boolean chemicalResistance = rdbChemicalResistance.isSelected();
            int quantity = Integer.parseInt(txtQuantity.getText());
            BasePipe pipe = null;
            
            for (Class type : pipeClasses) {
                pipe = BasePipe.canCreate(type, plasticGrade, colorPrint, innerInsulation, outerReinforcement, chemicalResistance, length, radius);
                if (pipe != null)
                    break;
            }
            if (pipe != null) {
                PipeOrder pipeOrder = new PipeOrder(quantity, pipe);
                pipeOrderManager.addOrder(pipeOrder);
                TableModelOrders tabelModel = (TableModelOrders) tblOrderList.getModel();
                tabelModel.fireTableDataChanged();
            } else {
                showMessageDialog(null, "Cannot create a pipe for these values");
            }
        }
        catch(NumberFormatException e) {
            showMessageDialog(null, "Please check that fields contain numbers");
        }
        catch(Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_btnAddToOrderActionPerformed

    /**
     * Clears all of the current orders from the table and PipeOrderManager.
     * 
     * @param evt       The event to evaluate
     */
    private void btnClearOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearOrderActionPerformed
        this.pipeOrderManager.removeAllOrders();
        TableModelOrders tableModel = (TableModelOrders) tblOrderList.getModel();
        tableModel.fireTableDataChanged();
    }//GEN-LAST:event_btnClearOrderActionPerformed

    /**
     * Removes the current selected row from the table and PipeOrderManager. If no row is selected then display an error dialog.
     * 
     * @param evt       The event to evaluate
     */
    private void btnRemoveFromOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFromOrderActionPerformed
        int rowIndex = tblOrderList.getSelectedRow();
        if (rowIndex != -1) {
            TableModelOrders tableModel = (TableModelOrders) tblOrderList.getModel();
            pipeOrderManager.removeOrder(tableModel.getOrderAtRow(rowIndex));
            tableModel.fireTableDataChanged();
        } else {
            showMessageDialog(null, "Select a row from the table to remove");
        }
    }//GEN-LAST:event_btnRemoveFromOrderActionPerformed

    /**
     * Clears the Orders and informs the user that the order has been submitted.
     * 
     * @param evt       The event to evaluate
     */
    private void btnSubmitOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitOrdersActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to submit this order?", "Submit Order", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.OK_OPTION) {
            pipeOrderManager.removeAllOrders();
            TableModelOrders tableModel = (TableModelOrders) tblOrderList.getModel();
            tableModel.fireTableDataChanged();
            showMessageDialog(null, "Order has been sent");
        }
    }//GEN-LAST:event_btnSubmitOrdersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new UIFrameMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToOrder;
    private javax.swing.JButton btnClearOrder;
    private javax.swing.JButton btnRemoveFromOrder;
    private javax.swing.JButton btnSubmitOrders;
    private javax.swing.JComboBox<String> cmbColor;
    private javax.swing.JComboBox<String> cmbPlasticGrade;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotalCost;
    private javax.swing.JRadioButton rdbChemicalResistance;
    private javax.swing.JRadioButton rdbInnerInsulation;
    private javax.swing.JRadioButton rdbOuterReinforcement;
    private javax.swing.JTable tblOrderList;
    private javax.swing.JTextField txtDiameter;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
